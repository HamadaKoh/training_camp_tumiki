services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: simple-load-test-db
    environment:
      POSTGRES_USER: ${DB_USER:-loadtest}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-loadtest_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../docs/design/simple-load-test/simple-database.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-loadtest}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - simple-load-test-network

  # Backend API (will be configured later based on language choice)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: simple-load-test-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-loadtest}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-loadtest_db}
      NODE_ENV: development
      PORT: ${BACKEND_PORT:-3000}
    ports:
      - "${BACKEND_PORT:-3000}:${BACKEND_PORT:-3000}"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - simple-load-test-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: simple-load-test-frontend
    environment:
      VITE_API_URL: http://localhost:${BACKEND_PORT:-3000}
      NODE_ENV: development
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - simple-load-test-network

volumes:
  postgres_data:

networks:
  simple-load-test-network:
    driver: bridge